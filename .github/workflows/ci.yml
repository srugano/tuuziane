name: Django CI/CD

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive  # If you have submodules

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install needed packages (if any)
        run: sudo apt-get install -y exiftool libgraphviz-dev # Example packages

      - name: Install/Update uv
        uses: astral-sh/setup-uv@v3

      - name: Synchronize dependencies with uv
        run: uv sync

      - name: Install "setuptools<58.0.0" (if needed)
        run: pip install "setuptools<58.0.0"

      - name: Check flake8 mistakes
        uses: py-actions/flake8@v2
        with:
          max-line-length: "120"
          exclude:.git,__pycache__,old,build,dist,tests,test_*

      - name: Check formatting
        uses: psf/black@stable

      - name: Run tests with coverage
        run: |
          coverage run manage.py test

      - name: Generate coverage report
        run: coverage html

      - name: Check coverage threshold and generate badge URL
        id: coverage
        run: |
          COVERAGE=$(coverage report -m | grep "TOTAL" | awk '{print $NF}' | tr -d '%')
          echo "Coverage: $COVERAGE%"

          if (( $(echo "$COVERAGE < 95" | bc -l) )); then  # Adjust threshold as needed
            echo "Coverage is below 95%. Failing the workflow."
            exit 1
          else
            echo "Coverage is at or above 95%. Continuing."
            BADGE_URL="https://img.shields.io/badge/coverage-$COVERAGE%%25-green"
            if (( $(echo "$COVERAGE < 98" | bc -l) )); then
                BADGE_URL="https://img.shields.io/badge/coverage-$COVERAGE%%25-yellow"
            fi
            echo "::set-output name=badge_url::$BADGE_URL"

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

      - name: Update README with coverage badge
        uses: EndBug/add-and-commit@v2
        with:
          branch: ${{ github.ref }}
          message: 'Update coverage badge'
          add: 'README.md'
          commit: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_PATH: README.md
          REPLACE_TEXT: '' # Your placeholder in the README
          REPLACEMENT_TEXT: '<img src="${{ steps.coverage.outputs.badge_url }}" alt="Coverage"/>'

      - name: Deploy to DigitalOcean (Master Branch Only)
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ghaction-ssh@master
        with:
          host: ${{ secrets.DIGITALOCEAN_IP }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_PRIVATE_KEY }}
          script: |
            ssh... "
              set -e
              cd /var/www/prod/tuuziane
              source /path/to/your/virtualenv/bin/activate
              git pull origin master
              git submodule update --init --recursive # If you have submodules
              uv sync
              python manage.py migrate
              python manage.py collectstatic --noinput
              sudo systemctl restart your-gunicorn-service # Or supervisorctl...
              echo "Deployment to tuuziane.com successful!"
            "

      - name: Check application health (version check)
        if: github.ref == 'refs/heads/master'
        run: |
          curl -s https://tuuziane.com/api/version/ | grep "\"version\":" # Or your health check method
          if [ $? -ne 0 ]; then
            echo "Health check failed!"
            exit 1
          else
            echo "Health check passed!"
          fi

      - name: Slack Notification (Success)
        if: ${{ github.ref == 'refs/heads/master' && always() && job.status == 'success' }}
        #... (Your Slack notification configuration)...

      - name: Slack Notification (Failure)
        if: ${{ github.ref == 'refs/heads/master' && always() && job.status == 'failure' }}
        #... (Your Slack notification configuration)...
