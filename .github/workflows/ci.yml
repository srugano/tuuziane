name: Django CI/CD

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install/Update uv
        uses: astral-sh/setup-uv@v3

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev

      - name: Install Tox
        run: uv pip install --system tox tox-gh-actions

      - name: Run Tox
        run: tox
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Deploy to DigitalOcean (Main Branch Only)
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_IP }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_PASSWORD }}
          port: ${{ secrets.DIGITALOCEAN_PORT }}
          script: |
              set -e
              whoami
              echo "Deploying to tuuziane.com with Path"
              export PATH="$HOME/.local/bin:$PATH"
              cd /var/www/prod/tuuziane
              git rev-parse HEAD > .PREVIOUS_COMMIT
              source /var/www/envs/tuuziane/bin/activate
              which uv
              git pull origin main
              uv sync --active
              python manage.py migrate
              cd /var/www/prod/tuuziane/vue-tuuziane
              npm install
              npm run build
              cd /var/www/prod/tuuziane
              python manage.py collectstatic --noinput
              export DJANGO_SETTINGS_MODULE=tuuziane.settings.prod
              sudo systemctl restart tuuziane.service
              echo "Deployment to tuuziane.com successful!"
      - name: Check application health
        if: github.ref == 'refs/heads/main'
        run: |
          response=$(curl -s -H "Accept: application/json" https://tuuziane.com/health/)
          if ! echo "$response" | jq -e 'all(. == "working")'; then
            echo "Health check failed! Response: $response"
            exit 1
          else
            echo "Health check passed!"
          fi
      - name: Rollback deployment on failure
        if: failure() && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_IP }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_PASSWORD }}
          port: ${{ secrets.DIGITALOCEAN_PORT }}
          script: |
            set -e
            echo "Deployment or health check failed. Rolling back..."
            cd /var/www/prod/tuuziane
            if [ -f .PREVIOUS_COMMIT ]; then
              PREVIOUS_COMMIT=$(cat .PREVIOUS_COMMIT)
              echo "Reverting to previous commit: $PREVIOUS_COMMIT"
              git reset --hard "$PREVIOUS_COMMIT"

              echo "Re-running deployment for previous version..."
              source /var/www/envs/tuuziane/bin/activate
              uv sync --active
              # We skip running migrations on rollback, as downgrading migrations can be
              # a complex and potentially destructive process. This rollback strategy
              # assumes that new migrations are backward-compatible.
              cd /var/www/prod/tuuziane/vue-tuuziane
              npm install
              npm run build
              cd /var/www/prod/tuuziane
              python manage.py collectstatic --noinput
              export DJANGO_SETTINGS_MODULE=tuuziane.settings.prod
              sudo systemctl restart tuuziane.service
              echo "Rollback successful."
            else
              echo "No previous commit file found. Cannot roll back."
              exit 1
            fi
