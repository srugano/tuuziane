[project]
name = "tuuziane"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "dj-database-url>=2.3",
  "django>=4.2,<5.1",
  "django-environ>=0.12",
  "django-health-check>=3.18.3",
  "django-oscar[sorl-thumbnail]>=3.2.5",
  "gunicorn>=23",
  "pre-commit>=4.1",
  "psutil>=6.1.1",
  "psycopg2-binary>=2.9.10",
  "pycountry>=24.6.1",
  "pysolr>=3.10",
  "pytest>=8.3.4",
  "pytest-django>=4.10",
  "wagtail>=6.3,<6.4",
  "django-vite>=3.1.0",
  "django-webpack-loader>=3.0.0",
  "djangorestframework>=3.15",
  "django-ipware>=7.0.1",
  "ua-parser",
  "user-agents",
  "django-user-agents>=0.4.0",
  "django-oscar-api>=3.3.0"
]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
# Assume Python 3.12
target-version = "py312"

# Same as Black.
line-length = 120
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Like Black, indent with spaces, rather than tabs.
format.indent-style = "space"
# Like Black, use double quotes for strings.
format.quote-style = "double"
# Like Black, automatically detect the appropriate line ending.
format.line-ending = "auto"
# Like Black, respect magic trailing commas.
format.skip-magic-trailing-comma = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
format.docstring-code-line-length = "dynamic"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
format.docstring-code-format = false
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = [ "E4", "E7", "E9", "F" ]
lint.ignore = [ "F403" ]
# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tuuziane.settings.dev"

[tool.uv]
package = false
