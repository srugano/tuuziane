name: Django CI/CD

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Pre-commit checks
        uses: pre-commit/action@v3.0.0
        with:
          exclude: migrations

      - name: Install/Update uv
        uses: astral-sh/setup-uv@v3

      - name: Synchronize dependencies with uv
        run: uv sync

      - name: Activate Virtual Environment and Run Tests
        run: |
          source .venv/bin/activate
          .venv/bin/pytest tests/
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Deploy to DigitalOcean (Main Branch Only)
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_IP }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_PASSWORD }}
          port: ${{ secrets.DIGITALOCEAN_PORT }}
          script: |
              set -e
              whoami
              echo "Deploying to tuuziane.com with Path"
              export PATH="$HOME/.local/bin:$PATH"
              cd /var/www/prod/tuuziane
              source /var/www/envs/tuuziane/bin/activate
              which uv
              git pull origin main
              uv sync --active
              python manage.py migrate
              python manage.py collectstatic --noinput
              export DJANGO_SETTINGS_MODULE=tuuziane.settings.prod
              sudo systemctl restart tuuziane.service
              echo "Deployment to tuuziane.com successful!"
      - name: Check application health
        if: github.ref == 'refs/heads/main'
        run: |
          response=$(curl -s -H "Accept: application/json" https://tuuziane.com/health/)
          if echo "$response" | jq '. | to_entries | map(select(.value!= "working")) | length' | grep -q '^*$'; then
            echo "Health check failed! Response: $response"
            exit 1
          else
            echo "Health check passed!"
          fi
